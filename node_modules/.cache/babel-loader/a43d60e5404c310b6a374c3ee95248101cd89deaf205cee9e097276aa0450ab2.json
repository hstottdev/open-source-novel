{"ast":null,"code":"var _jsxFileName = \"/Users/harry/Documents/GitHub/open-source-novel/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [story, setStory] = useState([]);\n  const [word, setWord] = useState('');\n  const [name, setName] = useState('');\n  const [message, setMessage] = useState('');\n  const [contributors, setContributors] = useState([]);\n  useEffect(() => {\n    fetchStory();\n  }, []);\n  const fetchStory = async () => {\n    const response = await axios.get('https://raw.githubusercontent.com/hstottdev/open-source-novel/refs/heads/main/data/story-data.json');\n    setStory(response.data);\n    setContributors(response.data.map(entry => entry.name));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const ipResponse = await axios.get('https://api.ipify.org?format=json');\n    const ip = ipResponse.data.ip;\n    const today = new Date().toISOString().split('T')[0];\n    const existingEntry = story.find(entry => entry.ip === ip && entry.date === today);\n    if (existingEntry) {\n      setMessage(`You have already submitted a word today: ${existingEntry.word} as ${existingEntry.name}`);\n      return;\n    }\n    const newEntry = {\n      name,\n      ip,\n      word,\n      date: today\n    };\n    const updatedStory = [...story, newEntry];\n\n    // Update GitHub repository using a serverless function\n    const updateResponse = await axios.post('/api/update-story', {\n      story: updatedStory\n    });\n    if (updateResponse.status === 200) {\n      setStory(updatedStory);\n      setContributors(updatedStory.map(entry => entry.name));\n      setMessage('Your word has been added to the story!');\n    } else {\n      setMessage('Failed to update the story. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Open Source Novel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"story-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"story-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"The Story So Far\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"story-content\",\n          children: story.map((entry, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [entry.word, \" \"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Add Your Word\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Your Name\",\n            value: name,\n            onChange: e => setName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Your Word\",\n            value: word,\n            onChange: e => setWord(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"message\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contributors\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contributors-list\",\n        children: contributors.map((name, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [name, \" \"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"TGlFmWxDZSw5ATYQ9ELxAItZ2jI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","story","setStory","word","setWord","name","setName","message","setMessage","contributors","setContributors","fetchStory","response","get","data","map","entry","handleSubmit","e","preventDefault","ipResponse","ip","today","Date","toISOString","split","existingEntry","find","date","newEntry","updatedStory","updateResponse","post","status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/Users/harry/Documents/GitHub/open-source-novel/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nfunction App() {\n  const [story, setStory] = useState([]);\n  const [word, setWord] = useState('');\n  const [name, setName] = useState('');\n  const [message, setMessage] = useState('');\n  const [contributors, setContributors] = useState([]);\n\n  useEffect(() => {\n    fetchStory();\n  }, []);\n\n  const fetchStory = async () => {\n    const response = await axios.get('https://raw.githubusercontent.com/hstottdev/open-source-novel/refs/heads/main/data/story-data.json');\n    setStory(response.data);\n    setContributors(response.data.map(entry => entry.name));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const ipResponse = await axios.get('https://api.ipify.org?format=json');\n    const ip = ipResponse.data.ip;\n    const today = new Date().toISOString().split('T')[0];\n\n    const existingEntry = story.find(entry => entry.ip === ip && entry.date === today);\n    if (existingEntry) {\n      setMessage(`You have already submitted a word today: ${existingEntry.word} as ${existingEntry.name}`);\n      return;\n    }\n\n    const newEntry = { name, ip, word, date: today };\n    const updatedStory = [...story, newEntry];\n\n    // Update GitHub repository using a serverless function\n    const updateResponse = await axios.post('/api/update-story', { story: updatedStory });\n    if (updateResponse.status === 200) {\n      setStory(updatedStory);\n      setContributors(updatedStory.map(entry => entry.name));\n      setMessage('Your word has been added to the story!');\n    } else {\n      setMessage('Failed to update the story. Please try again.');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Open Source Novel</h1>\n      <div className=\"story-container\">\n        <div className=\"story-box\">\n          <h2>The Story So Far</h2>\n          <div className=\"story-content\">\n            {story.map((entry, index) => (\n              <span key={index}>{entry.word} </span>\n            ))}\n          </div>\n        </div>\n        <div className=\"input-box\">\n          <h2>Add Your Word</h2>\n          <form onSubmit={handleSubmit}>\n            <input\n              type=\"text\"\n              placeholder=\"Your Name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              required\n            />\n            <input\n              type=\"text\"\n              placeholder=\"Your Word\"\n              value={word}\n              onChange={(e) => setWord(e.target.value)}\n              required\n            />\n            <button type=\"submit\">Submit</button>\n          </form>\n          {message && <p className=\"message\">{message}</p>}\n        </div>\n      </div>\n      <div className=\"contributors\">\n        <h2>Contributors</h2>\n        <div className=\"contributors-list\">\n          {contributors.map((name, index) => (\n            <span key={index}>{name} </span>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}